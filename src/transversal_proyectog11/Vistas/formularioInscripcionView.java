/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package transversal_proyectog11.Vistas;

import java.util.List;
import transversal_proyectog11.AccesoADatos.AlumnoData;
import transversal_proyectog11.AccesoADatos.InscripcionData;
import transversal_proyectog11.AccesoADatos.MateriaData;
import transversal_proyectog11.entidades.Alumno;
import transversal_proyectog11.entidades.Inscripcion;
import transversal_proyectog11.entidades.Materia;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Ale
 */
public class formularioInscripcionView extends javax.swing.JInternalFrame {

    /**
     * Creates new form formularioInscripcionView
     */
    public formularioInscripcionView() {
      initComponents();
      aData = new AlumnoData();
      listaA = (ArrayList<Alumno>)aData.listarAlumnos();
      modelo = new DefaultTableModel();
      cargaAlumnos();
      armarCabeceraTabla();
      inscData = new InscripcionData();
      mData = new MateriaData();
    }
    private ArrayList<Materia> listaM;
    private ArrayList<Alumno> listaA;

    private InscripcionData inscData;
    private MateriaData mData;
    private AlumnoData aData;

    private DefaultTableModel modelo;

    /**
     
Creates new form formularioInscripcionView*/
    private void cargaAlumnos() {
      
    for(Alumno item: listaA){
        cboxAlumno.addItem(item);
        }
    }       
    private void armarCabeceraTabla(){
        
      ArrayList<Object> filaCabecera = new ArrayList<>();
      filaCabecera.add("ID");
      filaCabecera.add("Nombre");
      filaCabecera.add("A침o");
      
        for(Object it: filaCabecera){
            modelo.addColumn(it);}
            jTable.setModel(modelo);}
    private void borrarFilaTabla(){
      int indice = modelo.getRowCount() -1;
      
      for (int i = indice; i>=0; i--){
          modelo.removeRow(i);}}
    
    private void cargaDatosNoInscriptas(){//borrarFilasTabla();
        
      Alumno selec = (Alumno)cboxAlumno.getSelectedItem();
      listaM = (ArrayList) inscData.obtenerMateriasNoCursadas(selec.getIdAlumno());
        for(Materia m: listaM){
            modelo.addRow(new Object[]{ m.getIdMateria(), m.getNombre(), m.getAnioMateria()});}}
    
    private void cargaDatosInscriptas(){//borrarFilasTabla();
        
      Alumno selec = (Alumno)cboxAlumno.getSelectedItem();
      List <Materia> lista = (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdAlumno());
      for(Materia m: lista){
      modelo.addRow(new Object[] { m.getIdMateria(), m.getNombre(), m.getAnioMateria()});}}

    private void jSalirActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        dispose();
    }

    private void jrMatInsActionPerformed(java.awt.event.ActionEvent evt) {
        borrarFilaTabla();
        jrMatNoIns.setSelected(false);
        cargaDatosInscriptas();
        jAnular.setEnabled(true);
        jInscribir.setEnabled(false);
    }

    private void jrMatNoInsActionPerformed(java.awt.event.ActionEvent evt) {
        borrarFilaTabla();
        jrMatIns.setSelected(false);
        cargaDatosNoInscriptas();
        jAnular.setEnabled(false);
        jInscribir.setEnabled(true);
    }

    private void jInscribirActionPerformed(java.awt.event.ActionEvent evt) {
        int filaSeleccionada=jTable.getSelectedRow();
        if(filaSeleccionada!=1){
            Alumno a = (Alumno) cboxAlumno.getSelectedItem();

            int idMateria = (Integer) modelo.getValueAt(filaSeleccionada, 0);
            String nombreMateria = (String) modelo.getValueAt(filaSeleccionada,1);
            int anio = (Integer) modelo.getValueAt(filaSeleccionada, 2);
            Materia m = Materia(idMateria,nombreMateria,anio,true);

            Inscripcion i = new Inscripcion (a,m,0);
            inscData.guardarInscripcion(i);
            borrarFilaTabla();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboxAlumno = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jrMatIns = new javax.swing.JRadioButton();
        jrMatNoIns = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jInscribir = new javax.swing.JButton();
        jAnular = new javax.swing.JButton();
        jSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jLabel1.setText("Formulario de Inscripci칩n");

        jLabel2.setText("Selecci칩na un Alumno:");

        cboxAlumno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboxAlumno.setSelectedIndex(-1);

        jLabel3.setText("Listado de Materias");

        jrMatIns.setText("Materias Inscriptas");

        jrMatNoIns.setText("Materias no Inscriptas");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jInscribir.setText("Inscribir");
        jInscribir.setEnabled(false);

        jAnular.setText("Anular Inscripci칩n");
        jAnular.setEnabled(false);

        jSalir.setText("Salir");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jrMatIns)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jrMatNoIns))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jInscribir)
                        .addGap(77, 77, 77)
                        .addComponent(jAnular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSalir))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(jLabel1))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboxAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrMatIns)
                    .addComponent(jrMatNoIns))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInscribir)
                    .addComponent(jAnular)
                    .addComponent(jSalir))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formularioInscripcionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formularioInscripcionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formularioInscripcionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formularioInscripcionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formularioInscripcionView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboxAlumno;
    private javax.swing.JButton jAnular;
    private javax.swing.JButton jInscribir;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JRadioButton jrMatIns;
    private javax.swing.JRadioButton jrMatNoIns;
    // End of variables declaration//GEN-END:variables

    private Materia Materia(int idMateria, String nombreMateria, int anio, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
